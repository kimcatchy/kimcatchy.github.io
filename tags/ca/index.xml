<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CA on BURROW</title><link>https://kimcatchy.github.io/tags/ca/</link><description>Recent content in CA on BURROW</description><generator>Hugo -- gohugo.io</generator><language>ko-KR</language><lastBuildDate>Sun, 21 Sep 2025 16:10:00 +0900</lastBuildDate><atom:link href="https://kimcatchy.github.io/tags/ca/index.xml" rel="self" type="application/rss+xml"/><item><title>논리식의 간소화</title><link>https://kimcatchy.github.io/p/boolean-expression-simplification/</link><pubDate>Sun, 21 Sep 2025 16:10:00 +0900</pubDate><guid>https://kimcatchy.github.io/p/boolean-expression-simplification/</guid><description>&lt;h2 id="카르노-도표"&gt;카르노 도표
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;조직적인 도표를 사용하여 부울 대수를 최적으로 간략화할 수 있음&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;부울 대수식을 간소화하기 위한 가장 체계적이고 간단한 방법&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;변수 1~5개로 이루어진 입력변수에 적용할 수 있으나 보통 4개까지만 적용&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="변수가-2개인-카르노-도표"&gt;변수가 2개인 카르노 도표
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;A&amp;rsquo;B&amp;rsquo;, A&amp;rsquo;B, AB&amp;rsquo;, AB&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;A&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;B&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;X&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;최소항&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;기호&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;A&amp;rsquo;B'&lt;/td&gt;
&lt;td&gt;m₀&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;A&amp;rsquo;B&lt;/td&gt;
&lt;td&gt;m₁&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;AB'&lt;/td&gt;
&lt;td&gt;m₂&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;AB&lt;/td&gt;
&lt;td&gt;m₃&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;변수가 2개인 카르노 도표의 표현&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;A / B&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;0&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;0&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;A&amp;rsquo;B'&lt;/td&gt;
&lt;td&gt;A&amp;rsquo;B&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;AB'&lt;/td&gt;
&lt;td&gt;AB&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;출력이 0인 경우 빈칸으로 표시하고 1인 경우에만 표시&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;A / B&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;0&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;0&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="변수가-4개인-카르노-도표"&gt;변수가 4개인 카르노 도표
&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;AB / CD&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;00&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;01&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;11&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;10&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;00&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;01&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;11&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;10&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="카르노-도표에서-행과-열의-이웃관계"&gt;카르노 도표에서 행과 열의 이웃관계
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;이웃과의 그룹화로 부울 대수를 간략화할 수 있게 함&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;카르노 도표는 평면 형태로 보이나 실제로는 원통 형태나 구 형태&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="부울-대수식의-간략화"&gt;부울 대수식의 간략화
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;주어진 부울식이나 진리표에 근거하여 카르노 도표를 작성&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;그룹화를 수행&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;그룹화 = 공통변수를 묶는 개념&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;카르노 도표에서 1로 표시된 이웃들을 1, 2, 4, 8, 16개씩 그룹화&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;가능하면 큰 개수로 그룹화하는 것이 간략화의 효과가 큼&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;각각 다른 그룹에 여러 번 중복하여 그룹화할 수 있음&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;그룹화할 이웃이 없는 경우 단독으로 그룹화되고 이것은 간략화되지는 않음&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;각 그룹을 간략화&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;간략화된 부울 대수식끼리 OR 연산&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="무관-조건"&gt;무관 조건
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;출력에 관여하지 않는 입력 변수를 무관 조건이라고 함&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;카르노 도표에서 x로 표기&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;이웃 영역을 그룹화할 때 가장 간단한 표현을 얻기 위해 임의로 채워질 수 있음&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;간략화 과정에서 그룹화할 수도 있고 그룹화하지 않을 수도 있음&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;어떤 입력 변수 조합이 허용되지 않는 상황이 발생했을 때 사용&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="논리-회로의-설계-방법"&gt;논리 회로의 설계 방법
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;문제로부터 논리적 정의를 명확히 내림&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;문제로부터 논리 진리표를 작성&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;진리표로부터 카르노 도표 작성&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;카르노 도표로부터 논리식을 간략화&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;논리회로를 그림&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</description></item><item><title>Logic Gate</title><link>https://kimcatchy.github.io/p/logic-gate/</link><pubDate>Sun, 21 Sep 2025 16:03:00 +0900</pubDate><guid>https://kimcatchy.github.io/p/logic-gate/</guid><description>&lt;h2 id="논리-회로"&gt;논리 회로
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;2진수의 논리연산을 수행하는 회로&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;논리게이트의 동작은 수학적으로 부울 대수로 표현 가능&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;게이트의 입력과 출력 관계는 진리표로 나타냄&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;AND&lt;/strong&gt;: 모든 입력이 1인 경우에만 1을 출력하고 나머지의 경우에는 0을 출력&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;마스크 연산&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;OR&lt;/strong&gt;: 입력 중 하나라도 1이라면 1을 출력하고 모두 0이라면 0을 출력&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;선택적-세트 연산&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;NOT&lt;/strong&gt;: 입력값에 대해 출력값이 반대가 되도록 함&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;XOR&lt;/strong&gt;: 여러 개의 입력 중에서 1의 개수가 홀수로 입력되면 1을 출력&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;선택적-보수 연산&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;비교 연산&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;NAND&lt;/strong&gt;: AND + NOT, AND의 출력과 반대로 출력, 모든 입력이 1인 경우에만 0을 출력하고 나머지는 1을 출력&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Negative-OR&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;NOR&lt;/strong&gt;: OR + NOT, 여러 개의 입력 중 최소한 하나 이상의 입력이 1을 갖는 경우 0을 출력&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Negative-AND&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;XNOR&lt;/strong&gt;: XOR + NOT, 여러 개의 입력 중에서 1의 개수가 홀수로 입력되면 0을 출력&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="범용-논리-게이트"&gt;범용 논리 게이트
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;NAND&lt;/strong&gt;와 &lt;strong&gt;NOR&lt;/strong&gt; 게이트로 디지털 시스템에서 사용되는 모든 논리 게이트를 구성할 수 있음&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;유니버셜 게이트 또는 범용 게이트라고 함&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="https://kimcatchy.github.io/p/logic-gate/image1.png"
width="743"
height="851"
srcset="https://kimcatchy.github.io/p/logic-gate/image1_hu_bdf1b2b86fcf71da.png 480w, https://kimcatchy.github.io/p/logic-gate/image1_hu_630190fbc2f28a0d.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="87"
data-flex-basis="209px"
&gt;&lt;/p&gt;
&lt;h2 id="불-대수"&gt;불 대수
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;인간의 사고과정을 수학적으로 해석한 것&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;임의의 명제가 참인지를 판명하기 때문에 논리 대수라고도 함&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;변수들의 진리표 관계를 대수식으로 표현하기 용이&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;동일한 성능을 갖는 더 간단한 회로 만들기에 편리&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="불-대수의-기본-법칙"&gt;불 대수의 기본 법칙
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;교환법칙&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;입력들의 순서가 변경되더라도 논리 연산의 결과는 동일하게 출력&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A·B = B·A&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A+B = B+A&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;결합법칙&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;세 입력이 동일한 논리 연산을 수행할 때, 입력의 순서가 바뀌어 연산이 수행되어도 결과는 동일함&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A·(B·C) = (A·B)·C&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A+(B+C) = (A+B)+C&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;분배법칙&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A·(B+C) = A·B + A·C&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;다중 부정&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;논리 부정이 여러 번 수행되는 것&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;드모르간의 법칙&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;여러 논리 변수의 논리합 전체를 부정(NOR)하면 그것은 원래의 논리 변수를 각각 부정한 것을 논리곱한 것과 같음&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;여러 논리 변수의 논리곱 전체를 부정(NAND)하면 그것은 원래의 논리 변수를 각각 부정한 것을 논리합한 것과 같음&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="불-대수의-기본-정리"&gt;불 대수의 기본 정리
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;+는 합집합, ·는 교집합, NOT은 여집합이라고 생각하면 됨&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A+0 = A&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A+1 = 1&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A·0 = 0&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A·1 = A&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A+A = A&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A+Ā = 1&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A·A = A&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A·Ā = 0&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A&amp;rsquo;&amp;rsquo; = A (A 위에 바 2개..)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A+AB = A&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A+ĀB = A+B&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(A+B)·(A+C) = A+BC&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="불-대수의-표준형"&gt;불 대수의 표준형
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;최소항&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;변수들이 AND로 결합된 것&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;변수 값이 참(1)인 경우는 정상형태인 A, B, C의 형태를 사용&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;변수 값이 거짓(0)인 경우는 보수형태인 Ā, B̄, C̄의 형태를 사용&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;표준 곱의 항이라고 함&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;최대항&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;변수들이 OR로 결합된 것&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;변수 값이 참(1)인 경우는 보수형태인 Ā, B̄, C̄의 형태를 사용&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;변수 값이 거짓(0)인 경우는 정상형태인 A, B, C의 형태를 사용&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;표준 합의 항이라고 함&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;표준 곱의 항과 표준 합의 항에서 표준의 의미는 불 대수가 모든 변수를 포함하고 있다는 것을 뜻함&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;곱의 합&lt;/strong&gt; (Sum of Products, SOP)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;각 항이 변수들의 곱(AND)으로 이루어져 있고, 이 항들이 합(OR)으로 연결&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(A + B)(C + D) 형태&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;최소항의 합으로 표현되며, 시그마(Σ) 기호로 나타냄&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;합의 곱&lt;/strong&gt; (Product of Sums, POS)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;각 항이 변수들의 합(OR)으로 이루어져 있고, 이 항들이 곱(AND)으로 연결&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AB + CD 형태&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;최대항의 곱으로 표현되며, 파이(π) 기호로 나타냄&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description></item></channel></rss>