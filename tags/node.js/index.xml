<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Node.js on BURROW</title><link>https://kimcatchy.github.io/tags/node.js/</link><description>Recent content in Node.js on BURROW</description><generator>Hugo -- gohugo.io</generator><language>ko-KR</language><lastBuildDate>Fri, 19 Sep 2025 23:54:00 +0900</lastBuildDate><atom:link href="https://kimcatchy.github.io/tags/node.js/index.xml" rel="self" type="application/rss+xml"/><item><title>Wiki.js v2.0</title><link>https://kimcatchy.github.io/p/wiki-js-2/</link><pubDate>Fri, 19 Sep 2025 23:54:00 +0900</pubDate><guid>https://kimcatchy.github.io/p/wiki-js-2/</guid><description>&lt;h2 id="설치"&gt;설치
&lt;/h2&gt;
&lt;div class="code-block-wrapper"&gt;
&lt;div class="code-block-header"&gt;
&lt;div class="code-block-dots"&gt;
&lt;span class="dot red"&gt;&lt;/span&gt;
&lt;span class="dot yellow"&gt;&lt;/span&gt;
&lt;span class="dot green"&gt;&lt;/span&gt;
&lt;/div&gt;
&lt;div class="code-block-language"&gt;bash&lt;/div&gt;
&lt;/div&gt;
&lt;div class="code-block-content"&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;span class="lnt"&gt;13
&lt;/span&gt;&lt;span class="lnt"&gt;14
&lt;/span&gt;&lt;span class="lnt"&gt;15
&lt;/span&gt;&lt;span class="lnt"&gt;16
&lt;/span&gt;&lt;span class="lnt"&gt;17
&lt;/span&gt;&lt;span class="lnt"&gt;18
&lt;/span&gt;&lt;span class="lnt"&gt;19
&lt;/span&gt;&lt;span class="lnt"&gt;20
&lt;/span&gt;&lt;span class="lnt"&gt;21
&lt;/span&gt;&lt;span class="lnt"&gt;22
&lt;/span&gt;&lt;span class="lnt"&gt;23
&lt;/span&gt;&lt;span class="lnt"&gt;24
&lt;/span&gt;&lt;span class="lnt"&gt;25
&lt;/span&gt;&lt;span class="lnt"&gt;26
&lt;/span&gt;&lt;span class="lnt"&gt;27
&lt;/span&gt;&lt;span class="lnt"&gt;28
&lt;/span&gt;&lt;span class="lnt"&gt;29
&lt;/span&gt;&lt;span class="lnt"&gt;30
&lt;/span&gt;&lt;span class="lnt"&gt;31
&lt;/span&gt;&lt;span class="lnt"&gt;32
&lt;/span&gt;&lt;span class="lnt"&gt;33
&lt;/span&gt;&lt;span class="lnt"&gt;34
&lt;/span&gt;&lt;span class="lnt"&gt;35
&lt;/span&gt;&lt;span class="lnt"&gt;36
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Fetch latest updates&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo apt -qqy update
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Install all updates automatically&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo &lt;span class="nv"&gt;DEBIAN_FRONTEND&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;noninteractive apt-get -qqy -o Dpkg::Options::&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;--force-confdef&amp;#39;&lt;/span&gt; -o Dpkg::Options::&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;--force-confold&amp;#39;&lt;/span&gt; dist-upgrade
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Install dependencies to install Docker&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo apt -qqy -o Dpkg::Options::&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;--force-confdef&amp;#39;&lt;/span&gt; -o Dpkg::Options::&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;--force-confold&amp;#39;&lt;/span&gt; install ca-certificates curl gnupg lsb-release
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Register Docker package registry&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo mkdir -p /etc/apt/keyrings
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;curl -fsSL &amp;lt;https://download.docker.com/linux/ubuntu/gpg&amp;gt; &lt;span class="p"&gt;|&lt;/span&gt; sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;deb [arch=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;dpkg --print-architecture&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt; signed-by=/etc/apt/keyrings/docker.gpg] &amp;lt;https://download.docker.com/linux/ubuntu&amp;gt; &lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;lsb_release -cs&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt; stable&amp;#34;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sudo tee /etc/apt/sources.list.d/docker.list &amp;gt; /dev/null
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Refresh package udpates and install Docker&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo apt -qqy update
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo apt -qqy -o Dpkg::Options::&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;--force-confdef&amp;#39;&lt;/span&gt; -o Dpkg::Options::&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;--force-confold&amp;#39;&lt;/span&gt; install docker-ce docker-ce-cli containerd.io docker-compose-plugin
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Create installation directory for Wiki.js&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo mkdir -p /etc/wiki
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 이건 내가 쓰려고 추가, 이거 안 할 거면 아래 openssl도 sudo 써야 될? 듯?&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo chown ubuntu:ubuntu /etc/wiki
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Generate DB secret&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;openssl rand -base64 &lt;span class="m"&gt;32&lt;/span&gt; &amp;gt; /etc/wiki/.db-secret
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Create internal docker network&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo docker network create wikinet
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Create data volume for PostgreSQL&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo docker volume create pgdata
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Create the containers&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo docker create --name&lt;span class="o"&gt;=&lt;/span&gt;db -e &lt;span class="nv"&gt;POSTGRES_DB&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;wiki -e &lt;span class="nv"&gt;POSTGRES_USER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;wiki -e &lt;span class="nv"&gt;POSTGRES_PASSWORD_FILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/etc/wiki/.db-secret -v /etc/wiki/.db-secret:/etc/wiki/.db-secret:ro -v pgdata:/var/lib/postgresql/data --restart&lt;span class="o"&gt;=&lt;/span&gt;unless-stopped -h db --network&lt;span class="o"&gt;=&lt;/span&gt;wikinet postgres:17
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo docker create --name&lt;span class="o"&gt;=&lt;/span&gt;wiki -e &lt;span class="nv"&gt;DB_TYPE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;postgres -e &lt;span class="nv"&gt;DB_HOST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;db -e &lt;span class="nv"&gt;DB_PORT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;5432&lt;/span&gt; -e &lt;span class="nv"&gt;DB_PASS_FILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/etc/wiki/.db-secret -v /etc/wiki/.db-secret:/etc/wiki/.db-secret:ro -e &lt;span class="nv"&gt;DB_USER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;wiki -e &lt;span class="nv"&gt;DB_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;wiki -e &lt;span class="nv"&gt;UPGRADE_COMPANION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; --restart&lt;span class="o"&gt;=&lt;/span&gt;unless-stopped -h wiki --network&lt;span class="o"&gt;=&lt;/span&gt;wikinet -p 80:3000 -p 443:3443 ghcr.io/requarks/wiki:2
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo docker create --name&lt;span class="o"&gt;=&lt;/span&gt;wiki-update-companion -v /var/run/docker.sock:/var/run/docker.sock:ro --restart&lt;span class="o"&gt;=&lt;/span&gt;unless-stopped -h wiki-update-companion --network&lt;span class="o"&gt;=&lt;/span&gt;wikinet ghcr.io/requarks/wiki-update-companion:latest&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;포트 변경 시 &lt;code&gt;docker create --name=wiki&lt;/code&gt; 부분에서 &lt;code&gt;80:3000&lt;/code&gt;과 &lt;code&gt;443:3443&lt;/code&gt;에서 80, 443 변경 후 nginx로 돌려주면 됨&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;5432, 3000, 3443은 서버 내에서만 사용돼서 따로 설정할 필요 없음&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;오라클 클라우드 기준이면 상관 없는데 방화벽 설정 필요할 경우 ↓&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="code-block-wrapper"&gt;
&lt;div class="code-block-header"&gt;
&lt;div class="code-block-dots"&gt;
&lt;span class="dot red"&gt;&lt;/span&gt;
&lt;span class="dot yellow"&gt;&lt;/span&gt;
&lt;span class="dot green"&gt;&lt;/span&gt;
&lt;/div&gt;
&lt;div class="code-block-language"&gt;bash&lt;/div&gt;
&lt;/div&gt;
&lt;div class="code-block-content"&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;span class="lnt"&gt;4
&lt;/span&gt;&lt;span class="lnt"&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo ufw allow ssh
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo ufw allow http
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo ufw allow https
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo ufw --force enable&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id="실행"&gt;실행
&lt;/h2&gt;
&lt;div class="code-block-wrapper"&gt;
&lt;div class="code-block-header"&gt;
&lt;div class="code-block-dots"&gt;
&lt;span class="dot red"&gt;&lt;/span&gt;
&lt;span class="dot yellow"&gt;&lt;/span&gt;
&lt;span class="dot green"&gt;&lt;/span&gt;
&lt;/div&gt;
&lt;div class="code-block-language"&gt;bash&lt;/div&gt;
&lt;/div&gt;
&lt;div class="code-block-content"&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo docker start db
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo docker start wiki
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo docker start wiki-update-companion&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;실행 후 Let&amp;rsquo;s Encrypt 인증 전 사이트 설정을 먼저 할 것&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;사이트 설정 시 문서 생성하기 전에 언어 설정부터 변경&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="letsencrypt"&gt;Let&amp;rsquo;s Encrypt
&lt;/h2&gt;
&lt;div class="code-block-wrapper"&gt;
&lt;div class="code-block-header"&gt;
&lt;div class="code-block-dots"&gt;
&lt;span class="dot red"&gt;&lt;/span&gt;
&lt;span class="dot yellow"&gt;&lt;/span&gt;
&lt;span class="dot green"&gt;&lt;/span&gt;
&lt;/div&gt;
&lt;div class="code-block-language"&gt;bash&lt;/div&gt;
&lt;/div&gt;
&lt;div class="code-block-content"&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;span class="lnt"&gt;4
&lt;/span&gt;&lt;span class="lnt"&gt;5
&lt;/span&gt;&lt;span class="lnt"&gt;6
&lt;/span&gt;&lt;span class="lnt"&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo docker stop wiki
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo docker rm wiki
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo docker create --name&lt;span class="o"&gt;=&lt;/span&gt;wiki -e &lt;span class="nv"&gt;LETSENCRYPT_DOMAIN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;wiki.example.com -e &lt;span class="nv"&gt;LETSENCRYPT_EMAIL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;admin@example.com -e &lt;span class="nv"&gt;SSL_ACTIVE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; -e &lt;span class="nv"&gt;DB_TYPE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;postgres -e &lt;span class="nv"&gt;DB_HOST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;db -e &lt;span class="nv"&gt;DB_PORT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;5432&lt;/span&gt; -e &lt;span class="nv"&gt;DB_PASS_FILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/etc/wiki/.db-secret -v /etc/wiki/.db-secret:/etc/wiki/.db-secret:ro -e &lt;span class="nv"&gt;DB_USER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;wiki -e &lt;span class="nv"&gt;DB_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;wiki -e &lt;span class="nv"&gt;UPGRADE_COMPANION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; --restart&lt;span class="o"&gt;=&lt;/span&gt;unless-stopped -h wiki --network&lt;span class="o"&gt;=&lt;/span&gt;wikinet -p 80:3000 -p 443:3443 ghcr.io/requarks/wiki:2
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo docker start wiki
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo docker logs wiki&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;restart 할 때마다 자동 갱신&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo docker restart wiki&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="discord-auth"&gt;Discord Auth
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class="link" href="https://discord.com/developers/applications" target="_blank" rel="noopener"
&gt;&lt;strong&gt;Discord Developer Portal&lt;/strong&gt;&lt;/a&gt;
&lt;span style="white-space: nowrap;"&gt;&lt;svg width=".7em"
height=".7em" viewBox="0 0 21 21" xmlns="http://www.w3.org/2000/svg"&gt;
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" /&gt;
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor"&gt;
&lt;/svg&gt;&lt;/span&gt;
&amp;gt; 어플리케이션 생성 &amp;gt; OAuth2&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Client ID, Client Secret 복사&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;wiki.js 관리 페이지 &amp;gt; 계정 인증 &amp;gt; 전략 추가 &amp;gt; 디스코드 선택&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;복사한 Client ID, Client Secret 붙여넣기&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(선택) Server ID에 디스코드 서버의 ID를 입력하면 해당 서버의 멤버만 가입 가능&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;서버 ID 입력 시 redirect가 정상적으로 되지 않을 경우 wiki.js restart&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;아래 쪽의 &lt;strong&gt;콜백 혹은 리다이렉트 URL&lt;/strong&gt; 복사해서 Discord Developer Portal OAuth 페이지의 Redirects에 추가&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;위 내용 모두 완료 후에 적용, 정상적으로 진행되는지 확인 후 관리 페이지 &amp;gt; 보안 &amp;gt; 로컬 인증 공급자 숨기기 활성화&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;로그인 화면에서 디스코드만 뜨지만 url 뒤에 ?all이 있을 경우 로컬 로그인도 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="로그인-페이지-배경-이미지-변경"&gt;로그인 페이지 배경 이미지 변경
&lt;/h2&gt;&lt;p&gt;&lt;img src="https://kimcatchy.github.io/p/wiki-js-2/image1.png"
width="771"
height="341"
srcset="https://kimcatchy.github.io/p/wiki-js-2/image1_hu_70c53e58e03f873c.png 480w, https://kimcatchy.github.io/p/wiki-js-2/image1_hu_84135aeda9643d38.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="226"
data-flex-basis="542px"
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;관리 페이지 &amp;gt; 보안 &amp;gt; 로그인 &amp;gt; 로그인 배경 이미지 URL&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ImgBB 같은 곳에 올리고 원본 이미지 링크 사용&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="사용-후기"&gt;사용 후기
&lt;/h2&gt;&lt;p&gt;node.js 기반이라 써봤는데 그냥 노션에 쓰고 말지 딱히 메리트가 있는 것 같지는 않다..&lt;/p&gt;</description></item><item><title>PM2</title><link>https://kimcatchy.github.io/p/pm2/</link><pubDate>Fri, 19 Sep 2025 02:29:00 +0900</pubDate><guid>https://kimcatchy.github.io/p/pm2/</guid><description>&lt;h2 id="pm2란"&gt;PM2란?
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Node.js 애플리케이션을 백그라운드에서 안정적으로 실행하는 프로세스 관리자&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;재시작, 로그 관리, 무중단 재시작까지 지원&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;전역 설치: &lt;code&gt;npm install pm2@latest -g&lt;/code&gt;로 설치, 설치 후 &lt;code&gt;pm2 -v&lt;/code&gt;로 버전 확인&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="프로세스-관리"&gt;프로세스 관리
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;기본 실행: &lt;code&gt;pm2 start app.js&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="관리-명령어"&gt;관리 명령어
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;프로세스 목록: &lt;code&gt;pm2 list&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;프로세스 상태: &lt;code&gt;pm2 status&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;정지/재시작/삭제: &lt;code&gt;pm2 stop &amp;lt;이름|id&amp;gt;&lt;/code&gt; / &lt;code&gt;pm2 restart &amp;lt;이름|id&amp;gt;&lt;/code&gt; / &lt;code&gt;pm2 delete &amp;lt;이름|id&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="자주-쓰는-옵션"&gt;자주 쓰는 옵션
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;프로세스 이름 지정: &amp;ndash;name &amp;lt;이름&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;파일 변경 시 자동 재시작: &amp;ndash;watch&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;메모리 제한 초과 시 재시작: &amp;ndash;max-memory-restart &amp;lt;용량&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="로그"&gt;로그
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;실시간 확인: &lt;code&gt;pm2 logs&lt;/code&gt;, 출력 로그와 에러 로그 동시에 출력&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pm2 log &amp;lt;이름|id&amp;gt;&lt;/code&gt;로 특정 프로세스 지정&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;로그 저장 위치: 기본 로그 파일은 &lt;code&gt;$HOME/.pm2/logs&lt;/code&gt;에 저장, 각 앱별 out/err 로그 파일로 분리&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="부팅-시-자동-시작"&gt;부팅 시 자동 시작
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;프로세스 목록 저장: &lt;code&gt;pm2 save&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;부팅 시 자동 복원 활성화: &lt;code&gt;pm2 startup&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;활성화 전 목록 저장 필수&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;수동 복원: &lt;code&gt;pm2 resurrect&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;재부팅 후 자동 복원이 안 될 경우 수동으로 복원&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="예시"&gt;예시
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;pm2 start app.js --name myApp --watch&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;pm2 start &amp;quot;npm run dev&amp;quot; --name myApp&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;pm2 start npm --name &amp;quot;myApp&amp;quot; -- run dev&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description></item></channel></rss>